FAIL
Kernel panic in run: PANIC at ../../devices/disk.c:411 in select_sector(): assertion `sec_no < d->capacity' failed.
Call stack: 0x8004218655 0x800421472e 0x8004213ce2 0x80042223b3 0x8004221d00 0x8004221bb9 0x800421d3e7 0x80042093de 0x80042097fc 0x4808508b480ceb08
Translation of call stack:
0x0000008004218655: debug_panic (lib/kernel/debug.c:32)
0x000000800421472e: select_sector (devices/disk.c:412)
0x0000008004213ce2: disk_read (devices/disk.c:220)
0x00000080042223b3: anon_swap_in (vm/anon.c:56 (discriminator 3))
0x0000008004221d00: vm_do_claim_page (vm/vm.c:290)
0x0000008004221bb9: vm_try_handle_fault (vm/vm.c:249)
0x000000800421d3e7: page_fault (userprog/exception.c:152)
0x00000080042093de: intr_handler (threads/interrupt.c:352)
0x00000080042097fc: intr_entry (threads/intr-stubs.o:?)
0x4808508b480ceb08: (unknown)

This assertion commonly fails when accessing a file via an inode that
has been closed and freed.  Freeing an inode clears all its sector
indexes to 0xcccccccc, which is not a valid sector number for disks
smaller than about 1.6 TB.
